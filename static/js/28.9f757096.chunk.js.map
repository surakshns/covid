{"version":3,"sources":["../node_modules/fast-deep-equal/index.js","../node_modules/d3-array/src/max.js","components/Minigraphs.js"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","max","values","valueof","undefined","value","index","margin","Minigraphs","timeseries","timelineDate","date","refs","useRef","endDate","getIndiaDateYesterdayISO","useMeasure","wrapperRef","width","Math","min","dates","useMemo","pastDates","filter","lastDate","cutOffDateLower","formatISO","subDays","parseIndiaDate","MINIGRAPH_LOOKBACK_DAYS","representation","getMinigraphStatistic","useCallback","statistic","getStatistic","useEffect","T","chartRight","chartBottom","xScale","scaleTime","clamp","domain","range","current","forEach","ref","pathLength","svg","select","LEVEL_STATISTICS","color","STATISTIC_CONFIGS","dailyMaxAbs","abs","yScale","scaleLinear","linePath","line","curve","curveMonotoneX","x","y","selectAll","data","join","enter","append","attr","this","getTotalLength","transition","delay","duration","update","attrTween","previous","interpolatePath","selection","style","className","map","classnames","el","preserveAspectRatio","height","isEqual","prevProps","currProps","forceRender","stateCode","memo"],"mappings":"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","file":"static/js/28.9f757096.chunk.js","sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","import {\r\n  MINIGRAPH_LOOKBACK_DAYS,\r\n  LEVEL_STATISTICS,\r\n  STATISTIC_CONFIGS,\r\n} from '../constants';\r\nimport {\r\n  getStatistic,\r\n  getIndiaDateYesterdayISO,\r\n  parseIndiaDate,\r\n} from '../utils/commonFunctions';\r\n\r\nimport classnames from 'classnames';\r\nimport {max} from 'd3-array';\r\nimport {interpolatePath} from 'd3-interpolate-path';\r\nimport {scaleTime, scaleLinear} from 'd3-scale';\r\nimport {select} from 'd3-selection';\r\nimport {line, curveMonotoneX} from 'd3-shape';\r\nimport 'd3-transition';\r\nimport {formatISO, subDays} from 'date-fns';\r\nimport equal from 'fast-deep-equal';\r\nimport {memo, useCallback, useEffect, useRef, useMemo} from 'react';\r\nimport {useMeasure} from 'react-use';\r\n\r\n// Dimensions\r\nconst margin = {top: 10, right: 10, bottom: 2, left: 10};\r\nconst height = 75;\r\nconst maxWidth = 120;\r\n\r\nfunction Minigraphs({timeseries, date: timelineDate}) {\r\n  const refs = useRef([]);\r\n  const endDate = timelineDate || getIndiaDateYesterdayISO();\r\n\r\n  let [wrapperRef, {width}] = useMeasure();\r\n  width = Math.min(width, maxWidth);\r\n\r\n  const dates = useMemo(() => {\r\n    const pastDates = Object.keys(timeseries || {}).filter(\r\n      (date) => date <= endDate\r\n    );\r\n    const lastDate = pastDates[pastDates.length - 1];\r\n\r\n    const cutOffDateLower = formatISO(\r\n      subDays(parseIndiaDate(lastDate), MINIGRAPH_LOOKBACK_DAYS),\r\n      {representation: 'date'}\r\n    );\r\n    return pastDates.filter((date) => date >= cutOffDateLower);\r\n  }, [endDate, timeseries]);\r\n\r\n  const getMinigraphStatistic = useCallback(\r\n    (date, statistic) => {\r\n      return getStatistic(timeseries?.[date], 'delta', statistic);\r\n    },\r\n    [timeseries]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!width) return;\r\n\r\n    const T = dates.length;\r\n\r\n    const chartRight = width - margin.right;\r\n    const chartBottom = height - margin.bottom;\r\n\r\n    const xScale = scaleTime()\r\n      .clamp(true)\r\n      .domain([\r\n        parseIndiaDate(dates[0] || endDate),\r\n        parseIndiaDate(dates[T - 1]) || endDate,\r\n      ])\r\n      .range([margin.left, chartRight]);\r\n\r\n    refs.current.forEach((ref, index) => {\r\n      const svg = select(ref);\r\n      const statistic = LEVEL_STATISTICS[index];\r\n      const color = STATISTIC_CONFIGS[statistic].color;\r\n\r\n      const dailyMaxAbs = max(dates, (date) =>\r\n        Math.abs(getMinigraphStatistic(date, statistic))\r\n      );\r\n\r\n      const yScale = scaleLinear()\r\n        .clamp(true)\r\n        .domain([-dailyMaxAbs, dailyMaxAbs])\r\n        .range([chartBottom, margin.top]);\r\n\r\n      const linePath = line()\r\n        .curve(curveMonotoneX)\r\n        .x((date) => xScale(parseIndiaDate(date)))\r\n        .y((date) => yScale(getMinigraphStatistic(date, statistic)));\r\n\r\n      let pathLength;\r\n      svg\r\n        .selectAll('path')\r\n        .data(T ? [dates] : [])\r\n        .join(\r\n          (enter) =>\r\n            enter\r\n              .append('path')\r\n              .attr('fill', 'none')\r\n              .attr('stroke', color + '99')\r\n              .attr('stroke-width', 2.5)\r\n              .attr('d', linePath)\r\n              .attr('stroke-dasharray', function () {\r\n                return (pathLength = this.getTotalLength());\r\n              })\r\n              .call((enter) =>\r\n                enter\r\n                  .attr('stroke-dashoffset', pathLength)\r\n                  .transition()\r\n                  .delay(100)\r\n                  .duration(2500)\r\n                  .attr('stroke-dashoffset', 0)\r\n              ),\r\n          (update) =>\r\n            update\r\n              .attr('stroke-dasharray', null)\r\n              .transition()\r\n              .duration(500)\r\n              .attrTween('d', function (date) {\r\n                const previous = select(this).attr('d');\r\n                const current = linePath(date);\r\n                return interpolatePath(previous, current);\r\n              })\r\n              .selection()\r\n        );\r\n\r\n      svg\r\n        .selectAll('circle')\r\n        .data(T ? [dates[T - 1]] : [])\r\n        .join(\r\n          (enter) =>\r\n            enter\r\n              .append('circle')\r\n              .attr('fill', color)\r\n              .attr('r', 2.5)\r\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\r\n              .attr('cy', (date) =>\r\n                yScale(getMinigraphStatistic(date, statistic))\r\n              )\r\n              .style('opacity', 0)\r\n              .call((enter) =>\r\n                enter\r\n                  .transition()\r\n                  .delay(2100)\r\n                  .duration(500)\r\n                  .style('opacity', 1)\r\n                  .attr('cx', (date) => xScale(parseIndiaDate(date)))\r\n                  .attr('cy', (date) =>\r\n                    yScale(getMinigraphStatistic(date, statistic))\r\n                  )\r\n              ),\r\n          (update) =>\r\n            update\r\n              .transition()\r\n              .duration(500)\r\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\r\n              .attr('cy', (date) =>\r\n                yScale(getMinigraphStatistic(date, statistic))\r\n              )\r\n              .style('opacity', 1)\r\n              .selection()\r\n        );\r\n    });\r\n  }, [endDate, dates, width, getMinigraphStatistic]);\r\n\r\n  return (\r\n    <div className=\"Minigraph\">\r\n      {LEVEL_STATISTICS.map((statistic, index) => (\r\n        <div\r\n          key={statistic}\r\n          className={classnames('svg-parent')}\r\n          ref={index === 0 ? wrapperRef : null}\r\n          style={{width: `calc(${100 / LEVEL_STATISTICS.length}%)`}}\r\n        >\r\n          <svg\r\n            ref={(el) => {\r\n              refs.current[index] = el;\r\n            }}\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n            width={width}\r\n            height={height}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (currProps.forceRender) {\r\n    return false;\r\n  } else if (!currProps.timeseries && prevProps.timeseries) {\r\n    return true;\r\n  } else if (currProps.timeseries && !prevProps.timeseries) {\r\n    return false;\r\n  } else if (!equal(currProps.stateCode, prevProps.stateCode)) {\r\n    return false;\r\n  } else if (!equal(currProps.date, prevProps.date)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport default memo(Minigraphs, isEqual);\r\n"],"sourceRoot":""}