{"version":3,"sources":["../node_modules/fast-deep-equal/index.js","../node_modules/d3-array/src/min.js","components/loaders/Timeseries.js","components/TimeseriesExplorer.js"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","min","values","valueof","undefined","value","index","TimeseriesLoader","windowWidth","window","innerWidth","width","height","viewBox","speed","cx","cy","r","Timeseries","lazy","retry","TimeseriesBrush","TimeseriesExplorer","stateCode","timeseries","timelineDate","date","regionHighlighted","setRegionHighlighted","anchor","setAnchor","expandTable","hideVaccinated","noRegionHighlightedDistrictData","t","useTranslation","useLocalStorage","lookback","setLookback","chartType","isUniform","isLog","isMovingAverage","stateCodeDateRange","dates","beginningDate","getIndiaDateYesterdayISO","endDate","useState","brushSelectionEnd","setBrushSelectionEnd","useEffect","brushSelectionStart","formatISO","subDays","parseIndiaDate","representation","explorerElement","useRef","isVisible","useIsVisible","once","useWindowSize","selectedRegion","useMemo","districts","districtName","selectedTimeseries","regions","states","filter","code","sort","code1","code2","STATE_NAMES","localeCompare","map","reduce","acc1","acc2","dropdownRegions","find","region","brushSelectionDates","handleChange","useCallback","target","JSON","parse","resetDropdown","statistics","TIMESERIES_STATISTICS","statistic","STATISTIC_CONFIGS","category","className","classnames","stickied","expanded","style","display","ref","onClick","bind","this","stringify","onChange","fallback","currentBrushSelection","animationIndex","animationDelay","TIMESERIES_LOOKBACK_DAYS","numDays","type","selected","isEqual","prevProps","currProps","forceRender","memo"],"mappings":"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","file":"static/js/29.c33485ad.chunk.js","sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import ContentLoader from 'react-content-loader';\r\n\r\nconst TimeseriesLoader = () => {\r\n  const windowWidth = window.innerWidth;\r\n  const width = windowWidth >= 769 ? 480 : windowWidth;\r\n  const height = 200 * 6;\r\n\r\n  return (\r\n    <ContentLoader\r\n      viewBox={`0 0 ${width} ${height}`}\r\n      height={height}\r\n      width={width}\r\n      speed={2}\r\n    >\r\n      <circle cx={0.4 * width} cy={height / 2} r=\"5\" />\r\n      <circle cx={0.5 * width} cy={height / 2} r=\"5\" />\r\n      <circle cx={0.6 * width} cy={height / 2} r=\"5\" />\r\n    </ContentLoader>\r\n  );\r\n};\r\n\r\nexport default TimeseriesLoader;\r\n","import TimeseriesLoader from './loaders/Timeseries';\r\n\r\nimport {\r\n  STATE_NAMES,\r\n  STATISTIC_CONFIGS,\r\n  TIMESERIES_CHART_TYPES,\r\n  TIMESERIES_LOOKBACK_DAYS,\r\n  TIMESERIES_STATISTICS,\r\n} from '../constants';\r\nimport useIsVisible from '../hooks/useIsVisible';\r\nimport {\r\n  getIndiaDateYesterdayISO,\r\n  parseIndiaDate,\r\n  retry,\r\n} from '../utils/commonFunctions';\r\n\r\nimport {PinIcon, ReplyIcon} from '@primer/octicons-react';\r\nimport classnames from 'classnames';\r\nimport {min} from 'd3-array';\r\nimport {formatISO, subDays} from 'date-fns';\r\nimport equal from 'fast-deep-equal';\r\nimport {\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  lazy,\r\n  Suspense,\r\n} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useLocalStorage, useWindowSize} from 'react-use';\r\n\r\nconst Timeseries = lazy(() => retry(() => import('./Timeseries')));\r\nconst TimeseriesBrush = lazy(() => retry(() => import('./TimeseriesBrush')));\r\n\r\nfunction TimeseriesExplorer({\r\n  stateCode,\r\n  timeseries,\r\n  date: timelineDate,\r\n  regionHighlighted,\r\n  setRegionHighlighted,\r\n  anchor,\r\n  setAnchor,\r\n  expandTable = false,\r\n  hideVaccinated = false,\r\n  noRegionHighlightedDistrictData,\r\n}) {\r\n  const {t} = useTranslation();\r\n  const [lookback, setLookback] = useLocalStorage('timeseriesLookbackDays', 90);\r\n  const [chartType, setChartType] = useLocalStorage('chartType', 'delta');\r\n  const [isUniform, setIsUniform] = useLocalStorage('isUniform', false);\r\n  const [isLog, setIsLog] = useLocalStorage('isLog', false);\r\n  const [isMovingAverage, setIsMovingAverage] = useLocalStorage(\r\n    'isMovingAverage',\r\n    false\r\n  );\r\n\r\n  const stateCodeDateRange = Object.keys(timeseries?.[stateCode]?.dates || {});\r\n  const beginningDate =\r\n    stateCodeDateRange[0] || timelineDate || getIndiaDateYesterdayISO();\r\n  const endDate = min([\r\n    stateCodeDateRange[stateCodeDateRange.length - 1],\r\n    timelineDate || getIndiaDateYesterdayISO(),\r\n  ]);\r\n\r\n  const [brushSelectionEnd, setBrushSelectionEnd] = useState(endDate);\r\n  useEffect(() => {\r\n    setBrushSelectionEnd(endDate);\r\n  }, [endDate]);\r\n\r\n  const brushSelectionStart =\r\n    lookback !== null\r\n      ? formatISO(subDays(parseIndiaDate(brushSelectionEnd), lookback), {\r\n          representation: 'date',\r\n        })\r\n      : beginningDate;\r\n\r\n  const explorerElement = useRef();\r\n  const isVisible = useIsVisible(explorerElement, {once: true});\r\n  const {width} = useWindowSize();\r\n\r\n  const selectedRegion = useMemo(() => {\r\n    if (timeseries?.[regionHighlighted.stateCode]?.districts) {\r\n      return {\r\n        stateCode: regionHighlighted.stateCode,\r\n        districtName: regionHighlighted.districtName,\r\n      };\r\n    } else {\r\n      return {\r\n        stateCode: regionHighlighted.stateCode,\r\n        districtName: null,\r\n      };\r\n    }\r\n  }, [timeseries, regionHighlighted.stateCode, regionHighlighted.districtName]);\r\n\r\n  const selectedTimeseries = useMemo(() => {\r\n    if (selectedRegion.districtName) {\r\n      return timeseries?.[selectedRegion.stateCode]?.districts?.[\r\n        selectedRegion.districtName\r\n      ]?.dates;\r\n    } else {\r\n      return timeseries?.[selectedRegion.stateCode]?.dates;\r\n    }\r\n  }, [timeseries, selectedRegion.stateCode, selectedRegion.districtName]);\r\n\r\n  const regions = useMemo(() => {\r\n    const states = Object.keys(timeseries || {})\r\n      .filter((code) => code !== stateCode)\r\n      .sort((code1, code2) =>\r\n        STATE_NAMES[code1].localeCompare(STATE_NAMES[code2])\r\n      )\r\n      .map((code) => {\r\n        return {\r\n          stateCode: code,\r\n          districtName: null,\r\n        };\r\n      });\r\n    const districts = Object.keys(timeseries || {}).reduce((acc1, code) => {\r\n      return [\r\n        ...acc1,\r\n        ...Object.keys(timeseries?.[code]?.districts || {}).reduce(\r\n          (acc2, districtName) => {\r\n            return [\r\n              ...acc2,\r\n              {\r\n                stateCode: code,\r\n                districtName: districtName,\r\n              },\r\n            ];\r\n          },\r\n          []\r\n        ),\r\n      ];\r\n    }, []);\r\n\r\n    return [\r\n      {\r\n        stateCode: stateCode,\r\n        districtName: null,\r\n      },\r\n      ...states,\r\n      ...districts,\r\n    ];\r\n  }, [timeseries, stateCode]);\r\n\r\n  const dropdownRegions = useMemo(() => {\r\n    if (\r\n      regions.find(\r\n        (region) =>\r\n          region.stateCode === regionHighlighted.stateCode &&\r\n          region.districtName === regionHighlighted.districtName\r\n      )\r\n    )\r\n      return regions;\r\n    return [\r\n      ...regions,\r\n      {\r\n        stateCode: regionHighlighted.stateCode,\r\n        districtName: regionHighlighted.districtName,\r\n      },\r\n    ];\r\n  }, [regionHighlighted.stateCode, regionHighlighted.districtName, regions]);\r\n\r\n  const dates = useMemo(\r\n    () =>\r\n      Object.keys(selectedTimeseries || {}).filter((date) => date <= endDate),\r\n    [selectedTimeseries, endDate]\r\n  );\r\n\r\n  const brushSelectionDates = useMemo(\r\n    () =>\r\n      dates.filter(\r\n        (date) => brushSelectionStart <= date && date <= brushSelectionEnd\r\n      ),\r\n    [dates, brushSelectionStart, brushSelectionEnd]\r\n  );\r\n\r\n  const handleChange = useCallback(\r\n    ({target}) => {\r\n      setRegionHighlighted(JSON.parse(target.value));\r\n    },\r\n    [setRegionHighlighted]\r\n  );\r\n\r\n  const resetDropdown = useCallback(() => {\r\n    setRegionHighlighted({\r\n      stateCode: stateCode,\r\n      districtName: null,\r\n    });\r\n  }, [stateCode, setRegionHighlighted]);\r\n\r\n  const statistics = useMemo(\r\n    () =>\r\n      TIMESERIES_STATISTICS.filter(\r\n        (statistic) =>\r\n          (!(STATISTIC_CONFIGS[statistic]?.category === 'vaccinated') ||\r\n            !hideVaccinated) &&\r\n          // (chartType === 'total' || statistic !== 'active') &&\r\n          (chartType === 'delta' || statistic !== 'tpr')\r\n      ),\r\n    [chartType, hideVaccinated]\r\n  );\r\n\r\n  return (\r\n    <div \r\n      className={classnames(\r\n        'TimeseriesExplorer fadeInUp',\r\n        {\r\n          stickied: anchor === 'timeseries',\r\n        },\r\n        {expanded: expandTable}\r\n      )}\r\n      style={{\r\n        display:\r\n          anchor && anchor !== 'timeseries' && (!expandTable || width < 769)\r\n            ? 'none'\r\n            : '',\r\n      }}\r\n      ref={explorerElement}\r\n    >\r\n      <div className=\"timeseries-header\">\r\n        <div\r\n          className={classnames('anchor', 'fadeInUp', {\r\n            stickied: anchor === 'timeseries',\r\n          })}\r\n          style={{\r\n            display: expandTable && width >= 769 ? 'none' : '',\r\n          }}\r\n          onClick={\r\n            setAnchor &&\r\n            setAnchor.bind(this, anchor === 'timeseries' ? null : 'timeseries')\r\n          }\r\n        >\r\n          <PinIcon />\r\n        </div>\r\n\r\n        <h1>{t('Stats')}</h1>\r\n        <div className=\"tabs\">\r\n        \r\n        </div>\r\n\r\n        <div className=\"timeseries-options\">\r\n          <div className=\"scale-modes\">\r\n            <div\r\n              className={`timeseries-mode ${\r\n                chartType !== 'total' ? 'disabled' : ''\r\n              }`}\r\n            >\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className={`timeseries-mode ${\r\n              chartType === 'total' ? 'disabled' : ''\r\n            } moving-average`}\r\n          >\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {dropdownRegions && (\r\n        <div className=\"state-selection\">\r\n          <div className=\"dropdown\">\r\n            <select\r\n              value={JSON.stringify(selectedRegion)}\r\n              onChange={handleChange}\r\n            >\r\n              {dropdownRegions\r\n                .filter(\r\n                  (region) =>\r\n                    STATE_NAMES[region.stateCode] !== region.districtName\r\n                )\r\n                .map((region) => {\r\n                  return (\r\n                    <option\r\n                      value={JSON.stringify(region)}\r\n                      key={`${region.stateCode}-${region.districtName}`}\r\n                    >\r\n                      {region.districtName\r\n                        ? t(region.districtName)\r\n                        : t(STATE_NAMES[region.stateCode])}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"reset-icon\" onClick={resetDropdown}>\r\n            <ReplyIcon />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isVisible && (\r\n        <Suspense fallback={<TimeseriesLoader />}>\r\n          <Timeseries\r\n            timeseries={selectedTimeseries}\r\n            regionHighlighted={selectedRegion}\r\n            dates={brushSelectionDates}\r\n            {...{\r\n              statistics,\r\n              endDate,\r\n              chartType,\r\n              isUniform,\r\n              isLog,\r\n              isMovingAverage,\r\n              noRegionHighlightedDistrictData,\r\n            }}\r\n          />\r\n          <TimeseriesBrush\r\n            timeseries={selectedTimeseries}\r\n            regionHighlighted={selectedRegion}\r\n            currentBrushSelection={[brushSelectionStart, brushSelectionEnd]}\r\n            animationIndex={statistics.length}\r\n            {...{dates, endDate, lookback, setBrushSelectionEnd, setLookback}}\r\n          />\r\n        </Suspense>\r\n      )}\r\n      {!isVisible && <div style={{height: '50rem'}} />}\r\n      <div\r\n        className=\"pills fadeInUp\"\r\n        style={{animationDelay: `${(1 + statistics.length) * 250}ms`}}\r\n      >\r\n        {TIMESERIES_LOOKBACK_DAYS.map((numDays) => (\r\n          <button\r\n            key={numDays}\r\n            type=\"button\"\r\n            className={classnames({\r\n              selected: numDays === lookback,\r\n            })}\r\n            onClick={setLookback.bind(this, numDays)}\r\n          >\r\n            {numDays !== null ? `${numDays} ${t('days')}` : t('Beginning')}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (currProps.forceRender) {\r\n    return false;\r\n  } else if (!currProps.timeseries && prevProps.timeseries) {\r\n    return true;\r\n  } else if (currProps.timeseries && !prevProps.timeseries) {\r\n    return false;\r\n  } else if (\r\n    !equal(\r\n      currProps.regionHighlighted.stateCode,\r\n      prevProps.regionHighlighted.stateCode\r\n    )\r\n  ) {\r\n    return false;\r\n  } else if (\r\n    !equal(\r\n      currProps.regionHighlighted.districtName,\r\n      prevProps.regionHighlighted.districtName\r\n    )\r\n  ) {\r\n    return false;\r\n  } else if (!equal(currProps.date, prevProps.date)) {\r\n    return false;\r\n  } else if (!equal(currProps.anchor, prevProps.anchor)) {\r\n    return false;\r\n  } else if (!equal(currProps.expandTable, prevProps.expandTable)) {\r\n    return false;\r\n  } else if (!equal(currProps.hideVaccinated, prevProps.hideVaccinated)) {\r\n    return false;\r\n  } else if (\r\n    !equal(\r\n      currProps.noRegionHighlightedDistrictData,\r\n      prevProps.noRegionHighlightedDistrictData\r\n    )\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport default memo(TimeseriesExplorer, isEqual);\r\n"],"sourceRoot":""}